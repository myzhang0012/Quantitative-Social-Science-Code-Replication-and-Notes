# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point() + ylim(-1.5, 1.5)
# ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point()
library(ggplot2)
# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point() + ylim(-1.5, 1.5)
ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point()
library(ggplot2)
# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) +
geom_point() +
scale_x_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5))
ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point()
library(ggplot2)
# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) +
geom_point() +
scale_x_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5))
ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point()
library(ggplot2)
# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) +
geom_point() +
scale_x_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5)) +
scale_y_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5))
ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point()
library(ggplot2)
# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) +
geom_point() +
scale_x_continuous(breaks = seq(from = -2, to = 2, by = 0.5)) +
scale_y_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5))
ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point()
library(ggplot2)
# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) +
geom_point() +
scale_x_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5), limits = c(-1.5, 1.5)) +
scale_y_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5))
ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point()
library(ggplot2)
# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) +
geom_point() +
scale_x_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5), limits = c(-1.5, 1.5)) +
scale_y_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5), limits = c(-1.5, 1.5))
ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point()
library(ggplot2)
# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) +
geom_point() +
scale_x_continuous( limits = c(-1.5, 1.5)) +
scale_y_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5), limits = c(-1.5, 1.5))
ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) + geom_point()
library(ggplot2)
# View(congress)
head(congress)
table(congress$party)
# 取出不包含其他党派的子集
repdem <- subset(congress, subset = (party != "Other"))
table(repdem$party)
# 分别取出第80届和第112届国会的民主党和共和党的子集（不包含其他党派）
repdem80 <- subset(repdem, subset = (congress == 80))
repdem112 <- subset(repdem, subset = (congress == 112))
ggplot(data = repdem80, aes(x=dwnom1, y=dwnom2, color=party)) +
geom_point() +
scale_x_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5), limits = c(-1.5, 1.5)) +
scale_y_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5), limits = c(-1.5, 1.5))
ggplot(data = repdem112, aes(x=dwnom1, y=dwnom2, color=party)) +
geom_point() +
scale_x_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5), limits = c(-1.5, 1.5)) +
scale_y_continuous(breaks = seq(from = -1.5, to = 1.5, by = 0.5), limits = c(-1.5, 1.5))
setwd("D:/QSS/Chapter4_Prediction")
## load election results, by state
pres08 <- read.csv("pres08.csv")
setwd("D:/QSS/Chapter4_Prediction/SupportingFiles4")
## load election results, by state
pres08 <- read.csv("pres08.csv")
## load polling data
polls08 <- read.csv("polls08.csv")
View(pres08)
View(polls08)
## compute Obama's margin
polls08$margin <- polls08$Obama - polls08$McCain
pres08$margin <- pres08$Obama - pres08$McCain
x <- as.Date("2008-11-04")
y <- as.Date("2008/9/1")
x - y # number of days between 2008/9/1 and 11/4
## convert to a Date object
polls08$middate <- as.Date(polls08$middate)
## computer the number of days to the election day
polls08$DaysToElection <- as.Date("2008-11-04") - polls08$middate
poll.pred <- rep(NA, 51) # initialize a vector place holder
## extract unique state names which the loop will iterate through
st.names <- unique(polls08$state)
## add state names as labels for easy interpretation later on
names(poll.pred) <- as.character(st.names)
## loop across 50 states plus DC
for (i in 1:51){
## subset the ith state
state.data <- subset(polls08, subset = (state == st.names[i]))
## further subset the latest polls within the state
latest <- subset(state.data, DaysToElection == min(DaysToElection))
## compute the mean of latest polls and store it
poll.pred[i] <- mean(latest$margin)
}
## error of latest polls
errors <- pres08$margin - poll.pred
names(errors) <- st.names # add state names
mean(errors) # mean prediction error
sqrt(mean(errors^2))
## histogram
hist(errors, freq = FALSE, ylim = c(0, 0.08),
main = "Poll prediction error",
xlab = "Error in predicted margin for Obama (percentage points)")
## add mean
abline(v = mean(errors), lty = "dashed", col = "red")
text(x = -7, y = 0.07, "average error", col = "red")
## type = "n" generates "empty" plot
plot(poll.pred, pres08$margin, type = "n", main = "", xlab = "Poll results",
xlim = c(-40, 90), ylim = c(-40, 90), ylab = "Actual election results")
## add state abbreviations
text(x = poll.pred, y = pres08$margin, labels = pres08$state, col = "blue")
## lines
abline(a = 0, b = 1, lty = "dashed") # 45 degree line
abline(v = 0)  # vertical line at 0
abline(h = 0)  # horizontal line at 0
## which state polls called wrong?
pres08$state[sign(poll.pred) != sign(pres08$margin)]
## what was the actual margin for these states?
pres08$margin[sign(poll.pred) != sign(pres08$margin)]
## actual results: total number of electoral votes won by Obama
sum(pres08$EV[pres08$margin > 0])
## poll prediction
sum(pres08$EV[poll.pred > 0])
## load the data
pollsUS08 <- read.csv("pollsUS08.csv")
## compute number of days to the election as before
pollsUS08$middate <- as.Date(pollsUS08$middate)
pollsUS08$DaysToElection <- as.Date("2008-11-04") - pollsUS08$middate
## empty vectors to store predictions
Obama.pred <- McCain.pred <- rep(NA, 90)
for (i in 1:90) {
## take all polls conducted within the past 7 days
week.data <- subset(pollsUS08, subset = ((DaysToElection <= (90 - i + 7))
& (DaysToElection > (90 - i))))
## compute support for each candidate using the average
Obama.pred[i] <- mean(week.data$Obama)
McCain.pred[i] <- mean(week.data$McCain)
}
## plot going from 90 days to 1 day before the election
plot(90:1, Obama.pred, type = "b", xlim = c(90, 0), ylim = c(40, 60),
col = "blue", xlab = "Days to the election",
ylab = "Support for candidate (percentage points)")
## `type = "b"' gives plot that includes both points and lines
lines(90:1, McCain.pred, type = "b", col = "red")
## actual election results: pch = 19 gives solid circles
points(0, 52.93, pch = 19, col = "blue")
points(0, 45.65, pch = 19, col = "red")
## line indicating the election day
abline(v = 0)
## labeling candidates
text(80, 48, "Obama", col = "blue")
text(80, 41, "McCain", col = "red")
## load the data
face <- read.csv("face.csv")
## two-party vote share for Democrats and Republicans
face$d.share <- face$d.votes / (face$d.votes + face$r.votes)
face$r.share <- face$r.votes / (face$d.votes + face$r.votes)
face$diff.share <- face$d.share - face$r.share
plot(face$d.comp, face$diff.share, pch = 16,
col = ifelse(face$w.party == "R", "red", "blue"),
xlim = c(0, 1), ylim = c(-1, 1),
xlab = "Competence scores for Democrats",
ylab = "Democratic margin in vote share",
main = "Facial competence and vote share")
## load the data and subset them into two parties
MPs <- read.csv("MPs.csv")
MPs.labour <- subset(MPs, subset = (party == "labour"))
MPs.tory <- subset(MPs, subset = (party == "tory"))
## two regressions for Labour: negative and positive margin
labour.fit1 <- lm(ln.net ~ margin,
data = MPs.labour[MPs.labour$margin < 0, ])
labour.fit2 <- lm(ln.net ~ margin,
data = MPs.labour[MPs.labour$margin > 0, ])
## two regressions for Tory: negative and positive margin
tory.fit1 <- lm(ln.net ~ margin, data = MPs.tory[MPs.tory$margin < 0, ])
tory.fit2 <- lm(ln.net ~ margin, data = MPs.tory[MPs.tory$margin > 0, ])
## Labour: range of predictions
y1l.range <- c(min(MPs.labour$margin), 0) # min to 0
y2l.range <- c(0, max(MPs.labour$margin)) # 0 to max
## prediction
y1.labour <- predict(labour.fit1, newdata = data.frame(margin = y1l.range))
y2.labour <- predict(labour.fit2, newdata = data.frame(margin = y2l.range))
## Tory: range of predictions
y1t.range <- c(min(MPs.tory$margin), 0) # min to 0
y2t.range <- c(0, max(MPs.tory$margin)) # 0 to max
## predict outcome
y1.tory <- predict(tory.fit1, newdata = data.frame(margin = y1t.range))
y2.tory <- predict(tory.fit2, newdata = data.frame(margin = y2t.range))
## scatterplot with regression lines for labour
plot(MPs.labour$margin, MPs.labour$ln.net, main = "Labour",
xlim = c(-0.5, 0.5), ylim = c(6, 18), xlab = "Margin of victory",
ylab = "log net wealth at death")
abline(v = 0, lty = "dashed")
## add regression lines
lines(y1l.range, y1.labour, col = "blue")
lines(y2l.range, y2.labour, col = "blue")
## scatterplot with regression lines for tory
plot(MPs.tory$margin, MPs.tory$ln.net, main = "Tory", xlim = c(-0.5, 0.5),
ylim = c(6, 18), xlab = "Margin of victory",
ylab = "log net wealth at death")
abline(v = 0, lty = "dashed")
## add regression lines
lines(y1t.range, y1.tory, col = "blue")
lines(y2t.range, y2.tory, col = "blue")
## average net wealth for Tory MP
tory.MP <- exp(y2.tory[1])
tory.MP
## average net wealth for Tory non-MP
tory.nonMP <- exp(y1.tory[2])
tory.nonMP
## causal effect in pounds
tory.MP - tory.nonMP
## two regressions for Tory: negative and positive margin
tory.fit3 <- lm(margin.pre ~ margin, data = MPs.tory[MPs.tory$margin < 0, ])
tory.fit4 <- lm(margin.pre ~ margin, data = MPs.tory[MPs.tory$margin > 0, ])
## the difference between two intercepts is the estimated effect
coef(tory.fit4)[1] - coef(tory.fit3)[1]
setwd("D:/QSS/Chapter4_Prediction/Exercise")
intrade08 <- read.csv("intrade08.csv")
intrade12 <- read.csv("intrade12.csv")
head(intrade08)
head(intrade12)
setwd("D:/QSS/Chapter4_Prediction/Exercise")
intrade08 <- read.csv("intrade08.csv")
intrade12 <- read.csv("intrade12.csv")
View(intrade08)
View(intrade12)
day_date <- as.Date(intrade08$day_date)
intrade081103 <- subset(intrade08, subset = (intrade08$day == "2008-11-03"))
table(intrade081103$state)
# for i in 1:51{
#   if(intrade081103$PriceD > intrade081103$PriceR){
#     winner[i] <- "D"
#   }else if(intrade081103$PriceD < intrade081103$PriceR){
#     winner[i] <- "R"
#   }else {
#     winner[i] <- "E"
#   }
# }
progresa <- read.csv("progresa.csv")
View(progresa)
# lm(progresa$pri2000s)
progresa <- read.csv("progresa.csv")
# View(progresa)
lm(pri2000s ~ treatment, data = progresa)
lm(t2000 ~ treatment, data = progresa)
progresa <- read.csv("progresa.csv")
# View(progresa)
## 先比较干预组和对照组中的平均结果差异
## 投票率差异
mean(progresa$pri2000s[progresa$treatment == 1]) -
mean(progresa$pri2000s[progresa$treatment == 0])
## 支持率差异
mean(progresa$t2000[progresa$treatment == 1]) -
mean(progresa$t2000[progresa$treatment == 0])
## 通过将结果变量和干预变量回归来估计这种影响
lm(pri2000s ~ treatment, data = progresa) # CCT计划对投票率
lm(t2000 ~ treatment, data = progresa) # CCT计划对支持率
## CCT计划对投票率
lm(pri2000s ~ treatment + avgpoverty + pobtot1994 + votos1994 +
pri1994 + pan1994 + prd1994 +
avgpoverty:treatment + pobtot1994:treatment + votos1994:treatment +
pri1994:treatment + pan1994:treatment + prd1994:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000s ~ treatment + avgpoverty + pobtot1994 + votos1994 +
pri1994 + pan1994 + prd1994 +
avgpoverty:treatment + pobtot1994:treatment + votos1994:treatment +
pri1994:treatment + pan1994:treatment + prd1994:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + avgpoverty + pobtot1994 + votos1994 +
pri1994 + pan1994 + prd1994 +
avgpoverty:treatment + pobtot1994:treatment + votos1994:treatment +
pri1994:treatment + pan1994:treatment + prd1994:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000s ~ treatment + I(log(avgpoverty) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + I(log(avgpoverty) + I(log(t1994)) +
## CCT计划对投票率
lm(pri2000s ~ treatment + I(log(avgpoverty) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + I(log(avgpoverty) + I(log(t1994)) +
## CCT计划对投票率
lm(pri2000s ~ treatment + I(log(avgpoverty) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + I(log(avgpoverty) + I(log(t1994)) +
## CCT计划对投票率
lm(pri2000s ~ treatment + avgpoverty + pobtot1994 + votos1994 +
pri1994 + pan1994 + prd1994 +
avgpoverty:treatment + pobtot1994:treatment + votos1994:treatment +
pri1994:treatment + pan1994:treatment + prd1994:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + avgpoverty + pobtot1994 + votos1994 +
pri1994 + pan1994 + prd1994 +
avgpoverty:treatment + pobtot1994:treatment + votos1994:treatment +
pri1994:treatment + pan1994:treatment + prd1994:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000s ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
## CCT计划对投票率
lm(pri2000s ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty)):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty)):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000s ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty)):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(I(log(t2000)) ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty)):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000s ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty)):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty)):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000s ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty)):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + I(log(avgpoverty)) + I(log(t1994)) +
pri1994s + pan1994s + prd1994s +
I(log(avgpoverty)):treatment + I(log(t1994)):treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000v ~ treatment + I(log(avgpoverty)) + I(log(t1994r)) +
pri1994v + pan1994v + prd1994v +
I(log(avgpoverty)):treatment + I(log(t1994r)):treatment +
pri1994v:treatment + pan1994v:treatment + prd1994v:treatment,
data = progresa)
## CCT计划对支持率
lm(pri2000r ~ treatment + I(log(avgpoverty)) + I(log(t1994r)) +
pri1994v + pan1994v + prd1994v +
I(log(avgpoverty)):treatment + I(log(t1994r)):treatment +
pri1994v:treatment + pan1994v:treatment + prd1994v:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000v ~ treatment + I(log(avgpoverty)) + I(log(t1994r)) +
pri1994v + pan1994v + prd1994v +
I(log(avgpoverty)):treatment + I(log(t1994r)):treatment +
pri1994v:treatment + pan1994v:treatment + prd1994v:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000r ~ treatment + I(log(avgpoverty)) + I(log(t1994r)) +
pri1994v + pan1994v + prd1994v +
I(log(avgpoverty)):treatment + I(log(t1994r)):treatment +
pri1994v:treatment + pan1994v:treatment + prd1994v:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000s ~ treatment + avgpoverty + I(log(pobtot1994)) +
t1994 + pri1994s + pan1994s + prd1994s +
avgpoverty:treatment + I(log(pobtot1994)) + t1994:treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + avgpoverty + I(log(pobtot1994)) +
t1994 + pri1994s + pan1994s + prd1994s +
avgpoverty:treatment + I(log(pobtot1994)) + t1994:treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000s ~ treatment + avgpoverty + I(log(pobtot1994)) +
t1994 + pri1994s + pan1994s + prd1994s +
avgpoverty:treatment + I(log(pobtot1994)):treatment + t1994:treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000 ~ treatment + avgpoverty + I(log(pobtot1994)) +
t1994 + pri1994s + pan1994s + prd1994s +
avgpoverty:treatment + I(log(pobtot1994)):treatment + t1994:treatment +
pri1994s:treatment + pan1994s:treatment + prd1994s:treatment,
data = progresa)
## CCT计划对投票率
lm(pri2000v ~ treatment + avgpoverty + I(log(pobtot1994)) + t1994r +
pri1994v + pan1994v + prd1994v + avgpoverty:treatment +
I(log(pobtot1994)):treatment + t1994r:treatment + pri1994v:treatment +
pan1994v:treatment + prd1994v:treatment,
data = progresa)
## CCT计划对支持率
lm(t2000r ~ treatment + avgpoverty + I(log(pobtot1994)) + t1994r +
pri1994v + pan1994v + prd1994v + avgpoverty:treatment +
I(log(pobtot1994)):treatment + t1994r:treatment + pri1994v:treatment +
pan1994v:treatment + prd1994v:treatment,
data = progresa)
